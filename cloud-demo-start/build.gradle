buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		// mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
		// 添加maven仓库 mybatis-generetor
        maven { url "https://plugins.gradle.org/m2/"}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		
		// mybatis-generator 插件路径mybatis-generetor
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// 引入 mybatis-generator 插件mybatis-generetor
apply plugin: "com.arenagod.gradle.MybatisGenerator"

group = 'com.rskt.spring.cloud'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	//mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

configurations {
   //这里需要使用 MyBatis Generator，MySQL 驱动，以及 MyBatis Mapper.
   //由于代码生成单独运行即可,不需要参与到整个项目的编译，因此在 build.gradle 中添加配置：
   mybatisGenerator
}

ext {
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('org.springframework.boot:spring-boot-starter-data-ldap')
	
	// 该依赖用于编译阶段
	compile('org.springframework.boot:spring-boot-starter-web')

	// 该依赖用于编译阶段
	compile('org.springframework.boot:spring-boot-starter-security')
	
	// compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	// runtime('org.springframework.boot:spring-boot-devtools')
	// mybatis
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')

	// 添加 Thymeleaf 的依赖
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')

	// 添加 OAuth2 的依赖
	compile('org.springframework.boot:spring-boot-autoconfigure:1.5.2.RELEASE')
	compile('org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE')
	//compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.3.RELEASE'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.9-rc'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.49'

    // mybatis-geerator
    // https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.7'
    
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-maven-plugin', version: '1.3.7' 

	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// mybatis-generator.xml 配置路径
mybatisGenerator {
   verbose = true
   configFile = 'src/main/resources/mybatis/generator.xml'
}
